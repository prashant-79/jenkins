AWSTemplateFormatVersion: "2010-09-09"
Description: 
  Basic template that defines a single Amazon EC2 instance with a security group
  that allows SSH traffic on port 22 and HTTP traffic on port 80 on Linux
  Virtual Machine.
Parameters:
  VpcId:
    Description: VPC id
    Type: AWS::EC2::VPC::Id
    Default: vpc-0eb34de7070396ef3
  SubnetId1:
    Description: Subnet Id where instance will create
    Type: AWS::EC2::Subnet::Id
    Default: subnet-0b02ce2dd7c701911
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: mykey
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t3.medium
    AllowedValues:
      - t3.medium
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  LatestAmiId:
    Type: AWS::EC2::Image::Id
    Default: ami-093613b5938a7e47c

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ECSn
      
      
    


  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ContainerSecurityGroup
      GroupDescription: Security group for NGINX container
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: deployment-example-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: deployment-example-container
          Image: nginx:1.23.3
          Cpu: 1
          Memory: 300
          PortMappings:
            - ContainerPort: 80
          
      RequiresCompatibilities:
        - FARGATE
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: ecs-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref SubnetId1
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId
 
      