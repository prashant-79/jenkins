AWSTemplateFormatVersion: "2010-09-09"

Description: Template for application load balancer

Parameters:

 EnvironmentName:
   Description: test 
   Type: String
   Default: ecs-alb-integration

 VpcId:
   Description: vpc-id
   Type: AWS::EC2::VPC::Id
   ConstraintDescription: must be the VPC Id of an existing Virtual Private Cloud.
   Default: vpc-0eb34de7070396ef3

 Subnet1:
   Description: Subnet-id-1
   Type: AWS::EC2::Subnet::Id
   Default: subnet-0b02ce2dd7c701911

 Subnet2:
   Description: Subnet-id-2
   Type: AWS::EC2::Subnet::Id
   Default: subnet-0adb4bedd1ff6c50d

 KeyName:
   Description: mykey.pem
   Type: AWS::EC2::KeyPair::KeyName
   Default: mykey

 SecurityGroup:
   Description: Select the Security Group to apply to the Application Load Balancer
   Type: AWS::EC2::SecurityGroup::Id
   Default: sg-06dc6c3e61e886a46

Resources:
  

  LoadBalancer:
   Type: AWS::ElasticLoadBalancingV2::LoadBalancer
   Properties:
     Name: !Ref EnvironmentName
     Subnets: 
      - !Ref Subnet1
      - !Ref Subnet2
     SecurityGroups:
       - !Ref SecurityGroup
    
  LoadBalancerListners:
   Type: AWS::ElasticLoadBalancingV2::Listener
   Properties:
     LoadBalancerArn: !Ref LoadBalancer
     Port: 80
     Protocol: HTTP
     DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref DefaultTargetGroup
       

  DefaultTargetGroup:
     Type: AWS::ElasticLoadBalancingV2::TargetGroup
     Properties:
       Name: !Ref EnvironmentName
       VpcId: !Ref VpcId
       Port: 80
       Protocol: HTTP
       TargetType: ip

  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: ECSn
      
      
  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ContainerSecurityGroup
      GroupDescription: Security group for NGINX container
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: deployment-example-task
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      ContainerDefinitions:
        - Name: deployment-example-container
          Image: nginx:1.23.3
          Cpu: 1
          Memory: 300
          PortMappings:
            - ContainerPort: 80
      RequiresCompatibilities:
        - FARGATE
  Service:
    DependsOn: LoadBalancerListners
    Type: AWS::ECS::Service
    Properties:
      ServiceName: ecs-service
      Cluster: !Ref Cluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:      
        - ContainerName: deployment-example-container
          ContainerPort: 80
          TargetGroupArn: !Ref DefaultTargetGroup
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Ref Subnet1
            - !Ref Subnet2
          SecurityGroups:
            - !GetAtt ContainerSecurityGroup.GroupId
      LoadBalancers:      
        - ContainerName: deployment-example-container
          ContainerPort: 80
          TargetGroupArn: !Ref DefaultTargetGroup



